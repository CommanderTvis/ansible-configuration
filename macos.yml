---
- name: Ansible for macOS with Homebrew
  hosts: all
  vars:
    ansible_python_interpreter: /opt/homebrew/bin/python3.13
    homebrew_packages:
      - ansible
      - ansible-lint
      - wget
      - tree
      - git
      - maven
      - postgresql@14
      - curl
      - yt-dlp
      - neofetch
      - gource
      - node
      - ffmpeg
      - uv
    homebrew_cask_apps:
      - visual-studio-code
      - brave-browser
      - 1password
      - 1password-cli
      - vlc
      - gimp
      - syncthing-app
      - qdirstat
      - telegram-desktop
      - anki
      - obsidian
      - tailscale-app
      - font-jetbrains-mono
      - balenaetcher
      - jetbrains-toolbox
      - alt-tab
      - zulip
      - docker-desktop
      - iterm2
      - monitorcontrol
      - warp
      - notion
  tasks:
    - name: Update Homebrew
      community.general.homebrew: { update_homebrew: true }

    - name: Install Homebrew formula packages
      community.general.homebrew:
        name: "{{ homebrew_packages }}"
        state: latest

    - name: Install Homebrew cask applications
      community.general.homebrew_cask:
        name: "{{ homebrew_cask_apps }}"
        state: latest
        accept_external_apps: true

    - name: Install yarn globally with npm
      community.general.npm:
        name: yarn
        global: true
        state: latest

    - name: Configure global Git config
      community.general.git_config:
        name: "{{ item.name }}"
        scope: global
        value: "{{ item.value }}"
      loop:
        - { name: init.defaultBranch, value: master }
        - { name: user.name, value: "Iaroslav Postovalov" }
        - { name: user.email, value: "postovalovya@gmail.com" }
        - { name: core.autocrlf, value: input }
        - name: user.signingkey
          value: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPhrNPHMWPV7gGuPheIX4POXrlPNNL2h/KMAJsAuSA0W"
        - { name: gpg.format, value: "ssh" }
        - { name: gpg.ssh.program, value: "/Applications/1Password.app/Contents/MacOS/op-ssh-sign" }
        - { name: commit.gpgsign, value: "true" }

    - name: Gather installed packages and dependencies
      block:
        - name: List installed formulae
          ansible.builtin.command: brew list --formula -1
          register: installed_formulae
          changed_when: false
        - name: List installed casks
          ansible.builtin.command: brew list --cask -1
          register: installed_casks
          changed_when: false
        - name: Gather managed dependencies
          ansible.builtin.command: "brew deps --union --include-build --include-optional {{ homebrew_packages | join(' ') }}"
          register: managed_deps
          changed_when: false
          failed_when: false

    - name: Prune unmanaged packages
      vars:
        installed: "{{ installed_formulae.stdout_lines + installed_casks.stdout_lines }}"
        managed: "{{ homebrew_packages + homebrew_cask_apps }}"
        dependencies: "{{ managed_deps.stdout_lines | default([]) }}"
        unmanaged: "{{ installed | difference(managed + dependencies) }}"
      when: unmanaged is defined and unmanaged | length > 0
      block:
        - name: Confirm pruning
          ansible.builtin.pause:
            prompt: |
              The following unmanaged packages will be pruned:
              {{ unmanaged | to_nice_yaml }}
              Press Enter to continue, or Ctrl+C and then 'A' to abort.
        - name: Remove unmanaged packages
          community.general.homebrew:
            name: "{{ item }}"
            state: absent
          ignore_errors: true
          loop: "{{ unmanaged }}"